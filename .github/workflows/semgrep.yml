on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches:
      - main
      - master
    paths:
      - .github/workflows/semgrep.yml
  schedule:
    - cron: 14 2 * * *

jobs:
  Testing-unit:
    name: Testing Code
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checking Repository
        uses: actions/checkout@v4

      - name: Checking Setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests with Pytest
        id: pytest-step
        continue-on-error: true
        run: |
          pip install pytest
          pytest app.py

  Dependency-audit:
    name: Dependecy Audit
    runs-on: ubuntu-latest
    needs: Testing-unit

    permissions:
      contents: read
      security-events: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5

      - name: Install and Run Safety
        run: |
          pip install safety
          safety check -r requirements.txt --full-report

  SAST:
    name: SAST using semgrep
    runs-on: ubuntu-latest
    needs: Testing-unit
    permissions:
      contents: read
      security-events: write
    container:
      image: semgrep/semgrep

    steps:
      - uses: actions/checkout@v4
      - name: semgrep scan
        run: semgrep --config=auto --sarif --output semgrep-report.sarif

      - name: upload semgrep report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep-report.sarif
  DAST:
    name: DAST with Wapiti
    runs-on: ubuntu-latest
    needs: SAST
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install Flask and Wapiti
        run: |
          python -m pip install --upgrade pip
          pip install flask wapiti3
      - name: Run Flask app in background
        run: |
          nohup python app.py &
          sleep 30

      - name: Run Wapiti Scan
        run: |
          wapiti -u http://localhost:5000 -o wapiti-report.json --format json --timeout 300 --max-scan-time 10 || true
      - name: Conditionally upload results
        if: always()
        run: |
          if [ -s wapiti-report.json ]; then
            echo "Vulnerabilities found, uploading artifact..."
            echo "upload=true" >> $GITHUB_ENV
          else
            echo "No vulnerabilities found, skipping upload."
            echo "upload=false" >> $GITHUB_ENV
          fi
      - name: Upload Wapiti Report
        if: env.upload == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: wapiti-report
          path: wapiti-report.json

  Deploy:
    name: Deploy with Docker
    runs-on: ubuntu-latest
    needs: SAST

    steps:
      - uses: actions/checkout@v4

      - name: Testing
        run: |
          echo "${{ secrets.GHCR_TOKEN}}" | docker login ghcr.io -u ${{ github.actor}} --password-stdin

      - name: Build Docker Image
        run: |
          IMAGE_ID=ghcr.io/rmsultan256/myapp
          docker build -t $IMAGE_ID:latest .

      - name: Push Docker Image
        run: |
          IMAGE_ID=ghcr.io/rmsultan256/myapp
          docker push $IMAGE_ID:latest
